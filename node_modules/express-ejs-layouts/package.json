{
  "_args": [
    [
      {
        "raw": "express-ejs-layouts",
        "scope": null,
        "escapedName": "express-ejs-layouts",
        "name": "express-ejs-layouts",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/run/media/solcanmihai/Storage/Web/infoeducatie-2017"
    ]
  ],
  "_from": "express-ejs-layouts@latest",
  "_id": "express-ejs-layouts@2.3.0",
  "_inCache": true,
  "_location": "/express-ejs-layouts",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/express-ejs-layouts-2.3.0.tgz_1490953915403_0.6853080068249255"
  },
  "_npmUser": {
    "name": "soarez",
    "email": "igorsoarez@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-ejs-layouts",
    "scope": null,
    "escapedName": "express-ejs-layouts",
    "name": "express-ejs-layouts",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-ejs-layouts/-/express-ejs-layouts-2.3.0.tgz",
  "_shasum": "80bee93ed83174c8967a6fcff2fdd3e9afb7087a",
  "_shrinkwrap": null,
  "_spec": "express-ejs-layouts",
  "_where": "/run/media/solcanmihai/Storage/Web/infoeducatie-2017",
  "author": {
    "name": "Igor Soarez",
    "email": "igorsoarez@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Soarez/express-ejs-layouts/issues"
  },
  "dependencies": {},
  "description": "Layout support for ejs in express.",
  "devDependencies": {
    "ejs": "*",
    "express": "*",
    "mocha": "*",
    "should": "*",
    "supertest": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "80bee93ed83174c8967a6fcff2fdd3e9afb7087a",
    "tarball": "https://registry.npmjs.org/express-ejs-layouts/-/express-ejs-layouts-2.3.0.tgz"
  },
  "gitHead": "3992cb30ecdfd6134c5180244175ad6e1a5371a3",
  "homepage": "https://github.com/Soarez/express-ejs-layouts#readme",
  "keywords": [
    "express",
    "layout",
    "ejs"
  ],
  "main": "lib/express-layouts.js",
  "maintainers": [
    {
      "name": "soarez",
      "email": "igor@soarez.com"
    },
    {
      "name": "nemopersona",
      "email": "nemo.persona@hush.com"
    }
  ],
  "name": "express-ejs-layouts",
  "optionalDependencies": {},
  "readme": "# express-ejs-layouts\n\n> Layout support for ejs in express\n\n[![build status](https://secure.travis-ci.org/Soarez/express-ejs-layouts.svg)](http://travis-ci.org/Soarez/express-ejs-layouts)\n\n## Installation\n\n```sh\n$ npm install express-ejs-layouts\n```\n\n## Example\n\nCheck the example folder.\n\n1. `git clone git@github.com:Soarez/express-ejs-layouts.git`\n2. `cd express-ejs-layouts`\n3. `npm install`\n4. `node example`\n5. Open http://localhost:3000/\n\n## Usage\n\n```javascript\nvar express = require('express');\nvar expressLayouts = require('express-ejs-layouts');\n\nvar app = express();\n\napp.set('view engine', 'ejs');\n\napp.use(expressLayouts);\n\napp.get('/', function(req, res) {\n  var locals = {\n    title: 'Page Title',\n    description: 'Page Description',\n    header: 'Page Header'\n  };\n  res.render('the-view', locals);\n});\n\napp.listen(3000);\n```\n\n\n### `contentFor`\n\nA view\n\n```ejs\ntyler\n<%- contentFor('foo') %>\nclub\n<%- contentFor('bar') %>\nfight\n```\n\nWith a layout\n\n```ejs\n<%-bar%> <%-foo%>\n<%-body%>\n```\n\nRenders\n\n```\nfight club\ntyler\n```\n\n\nAs another example, consider this view:\n\n```html\nfoo\n<%- contentFor('pageSectionA') %>\nbar\n<%- contentFor('pageSectionB') %>\nbaz\n```\n\nUsing it with this layout:\n\n```html\n<div class=\"header\"><%- pageSectionA %></div>\n<div class=\"body\"><%- body %></div>\n<div class=\"footer\"><%-defineContent('pageSectionB')%></div>\n```\n\nWill render:\n\n```html\n<div class=\"header\">bar</div>\n<div class=\"body\">foo</div>\n<div class=\"footer\">baz</div>\n```\n\nNotice that the difference between using `<%- pageSectionA %>` and `<%-defineContent('pageSectionA')%>` is that the former will generate an error if the view doesn't define content for this section.\n\n\n### Script blocks extraction\n\nIf you like to place all the script blocks at the end, you can do it like this:\n\n```javascript\napp.set(\"layout extractScripts\", true)\n```\n\nA view\n\n```html\nsomething<script>somejs<script>something\n```\n\nWith a layout\n\n```ejs\n<body>\n  <%- body %>\n  <%- script %>\n</body>\n```\n\nRenders\n\n```html\n<body>\n  somethingsomething\n  <script>somejs<script>\n</body>\n```\n\nEnabling invididually:\n\n```javascript\nreq.render('view', { extractScripts: true })\n```\n\n\nWhen the `\"layout extractScripts\"` option is activated, scripts defined in views will be extracted (won't be a part of `body`) and will be available for use in the layout through the variable `scripts`.\n\nAnother example:\n\nThis view:\n\n```html\n<script src=\"/b.js\" />\n<div>foo</div>\n<script src=\"/a.js\" />\n<div>bar</div>\n<script src=\"/c.js\" />\n```\n\nUsed with this layout:\n\n```html\n<div class=\"main\">\n<%- body %>\n</div>\n<!-- place the scripts at the end of the html page -->\n<%- script %>\n```\n\nWill render:\n\n```html\n<div class=\"main\">\n<div>foo</div>\n<div>bar</div>\n</div>\n<!-- place the scripts at the end of the html page -->\n<script src=\"/b.js\" />\n<script src=\"/a.js\" />\n<script src=\"/c.js\" />\n```\n\n### Style blocks extraction\n\nWorks exactly like script blocks extraction except:\n\n* Supported tags are `<link rel=\"stylesheet\" …>` and `<style …>`\n* The option is named `extractStyles`\n* The template variable in layout is `style`\n\n### Meta blocks extraction\n\nWorks exactly like script blocks extraction except:\n\n* Supported tags are `<meta …>` and `<meta …/>`\n* The option is named `extractMetas`\n* The template variable in layout is `meta`\n\n### Set custom default layout\n\nBy default 'layout.ejs' is used. If you want to specify your custom\nlayout (e.g. 'layouts/layout.ejs'), just set `layout` property in\nexpress app settings.\n\n```\napp.set('layout', 'layouts/layout');\n```\n\n### Set custom layout for single render\n\nJust pass `layout` as render locals object.\n\n```\napp.get('/', function(req, res) {\n  res.render('the-view', { layout: 'specific-layout' });\n);\n```\n\n## Optional sections\n\nIn a layout, you can have optional sections using `defineContent`:\nUnspecified section content defaults to `''`.\n\n```ejs\n1\n<%-defineContent('a')%>\n2\n<%-defineContent('b')%>\n3\n```\n\nwith a view:\n\n```ejs\n<%- contentFor('a') %>\n1.5\n```\n\nwill render:\n\n```ejs\n1\n1.5\n2\n3\n```\n\n\n## Running tests\n\nClone the repo and run:\n\n```sh\n$ npm test\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Soarez/express-ejs-layouts.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.3.0"
}
